{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "baseRatePerYear",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "multiplierPerYear",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "baseRatePerBlock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "blocksPerYear",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "cash",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrows",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserves",
						"type": "uint256"
					}
				],
				"name": "getBorrowRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "cash",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrows",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserves",
						"type": "uint256"
					}
				],
				"name": "getBorrowRateAndUtilization",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "cash",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrows",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserves",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserveFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "getSupplyRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isInterestRateModel",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "multiplierPerBlock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "cash",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrows",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserves",
						"type": "uint256"
					}
				],
				"name": "utilizationRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"baseRatePerYear": "The approximate target base APR, as a mantissa (scaled by 1e18)",
						"multiplierPerYear": "The rate of increase in interest rate wrt utilization (scaled by 1e18)"
					}
				},
				"getBorrowRate(uint256,uint256,uint256)": {
					"params": {
						"borrows": "The amount of borrows in the market",
						"cash": "The amount of cash in the market",
						"reserves": "The amount of reserves in the market"
					},
					"returns": {
						"_0": "The borrow rate percentage per block as a mantissa (scaled by 1e18)"
					}
				},
				"getSupplyRate(uint256,uint256,uint256,uint256)": {
					"params": {
						"borrows": "The amount of borrows in the market",
						"cash": "The amount of cash in the market",
						"reserveFactorMantissa": "The current reserve factor for the market",
						"reserves": "The amount of reserves in the market"
					},
					"returns": {
						"_0": "The supply rate percentage per block as a mantissa (scaled by 1e18)"
					}
				},
				"utilizationRate(uint256,uint256,uint256)": {
					"params": {
						"borrows": "The amount of borrows in the market",
						"cash": "The amount of cash in the market",
						"reserves": "The amount of reserves in the market (currently unused)"
					},
					"returns": {
						"_0": "The utilization rate as a mantissa between [0, 1e18]"
					}
				}
			},
			"title": "Compound's WhitePaperInterestRateModel",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"baseRatePerBlock()": {
					"notice": "The base interest rate which is the y-intercept when utilization rate is 0"
				},
				"blocksPerYear()": {
					"notice": "The approximate number of blocks per year that is assumed by the interest rate model"
				},
				"constructor": {
					"notice": "Construct an interest rate model"
				},
				"getBorrowRate(uint256,uint256,uint256)": {
					"notice": "Calculates the current borrow rate per block, with the error code expected by the market"
				},
				"getSupplyRate(uint256,uint256,uint256,uint256)": {
					"notice": "Calculates the current supply rate per block"
				},
				"isInterestRateModel()": {
					"notice": "Indicator that this is an InterestRateModel contract (for inspection)"
				},
				"multiplierPerBlock()": {
					"notice": "The multiplier of utilization rate that gives the slope of the interest rate"
				},
				"utilizationRate(uint256,uint256,uint256)": {
					"notice": "Calculates the utilization rate of the market: `borrows / (cash + borrows - reserves)`"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/WhitePaperInterestRateModel.sol": "WhitePaperInterestRateModel"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/WhitePaperInterestRateModel.sol": {
			"keccak256": "0xd5e4f2813c5285c3c1468b792a2c914f81a1e20f3fb79a5500461e7ffd396b21",
			"urls": [
				"bzz-raw://73f808696759b52dd0257d02cf71716791c505bdbee05e54fd32f7e236896d0b",
				"dweb:/ipfs/QmP8iwi9UoE5xAnWuUFmZk6ULhBTy1KksSKWBFhagUU1xx"
			]
		}
	},
	"version": 1
}