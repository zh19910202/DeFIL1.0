{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [],
		"devdoc": {
			"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/EFIL.sol": "EnumerableSet"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/EFIL.sol": {
			"keccak256": "0x6bfe2beef5bb84bff7a5631158105313a3be8fdac34831089d3f832fbef2f8f4",
			"license": "MIT",
			"urls": [
				"bzz-raw://27394bd74969817abec84f21997dc58ae102e5f0b513cd6a0ed096d657733557",
				"dweb:/ipfs/QmXAjDxcMvj7gZ5jDbRtx7VVgiYFEn54Gm5bm8S3yggoKg"
			]
		}
	},
	"version": 1
}