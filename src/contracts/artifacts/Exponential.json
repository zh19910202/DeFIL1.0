{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220d206cb4721fa0ef1de3110b71f357e2065b358951be2d3eb4c6f2e3d0da3080964736f6c63430007060033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 MOD 0xCB SELFBALANCE 0x21 STATICCALL 0xE CALL 0xDE BALANCE LT 0xB7 0x1F CALLDATALOAD PUSH31 0x2065B358951BE2D3EB4C6F2E3D0DA3080964736F6C63430007060033000000 ",
			"sourceMap": "10985:12012:0:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "6080604052600080fdfea2646970667358221220d206cb4721fa0ef1de3110b71f357e2065b358951be2d3eb4c6f2e3d0da3080964736f6c63430007060033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 MOD 0xCB SELFBALANCE 0x21 STATICCALL 0xE CALL 0xDE BALANCE LT 0xB7 0x1F CALLDATALOAD PUSH31 0x2065B358951BE2D3EB4C6F2E3D0DA3080964736F6C63430007060033000000 ",
			"sourceMap": "10985:12012:0:-:0;;;;;"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "12600",
				"executionCost": "66",
				"totalCost": "12666"
			},
			"internal": {
				"addExp(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"add_(struct Exponential.Double memory,struct Exponential.Double memory)": "infinite",
				"add_(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"add_(uint256,uint256)": "infinite",
				"add_(uint256,uint256,string memory)": "infinite",
				"divExp(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"divScalar(struct Exponential.Exp memory,uint256)": "infinite",
				"divScalarByExp(uint256,struct Exponential.Exp memory)": "infinite",
				"divScalarByExpTruncate(uint256,struct Exponential.Exp memory)": "infinite",
				"div_(struct Exponential.Double memory,struct Exponential.Double memory)": "infinite",
				"div_(struct Exponential.Double memory,uint256)": "infinite",
				"div_(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"div_(struct Exponential.Exp memory,uint256)": "infinite",
				"div_(uint256,struct Exponential.Double memory)": "infinite",
				"div_(uint256,struct Exponential.Exp memory)": "infinite",
				"div_(uint256,uint256)": "infinite",
				"div_(uint256,uint256,string memory)": "infinite",
				"fraction(uint256,uint256)": "infinite",
				"getExp(uint256,uint256)": "infinite",
				"greaterThanExp(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"isZeroExp(struct Exponential.Exp memory)": "infinite",
				"lessThanExp(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"lessThanOrEqualExp(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"mulExp(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"mulExp(uint256,uint256)": "infinite",
				"mulExp3(struct Exponential.Exp memory,struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"mulScalar(struct Exponential.Exp memory,uint256)": "infinite",
				"mulScalarTruncate(struct Exponential.Exp memory,uint256)": "infinite",
				"mulScalarTruncateAddUInt(struct Exponential.Exp memory,uint256,uint256)": "infinite",
				"mul_(struct Exponential.Double memory,struct Exponential.Double memory)": "infinite",
				"mul_(struct Exponential.Double memory,uint256)": "infinite",
				"mul_(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"mul_(struct Exponential.Exp memory,uint256)": "infinite",
				"mul_(uint256,struct Exponential.Double memory)": "infinite",
				"mul_(uint256,struct Exponential.Exp memory)": "infinite",
				"mul_(uint256,uint256)": "infinite",
				"mul_(uint256,uint256,string memory)": "infinite",
				"safe224(uint256,string memory)": "infinite",
				"safe32(uint256,string memory)": "infinite",
				"subExp(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"sub_(struct Exponential.Double memory,struct Exponential.Double memory)": "infinite",
				"sub_(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"sub_(uint256,uint256)": "infinite",
				"sub_(uint256,uint256,string memory)": "infinite",
				"truncate(struct Exponential.Exp memory)": "infinite"
			}
		},
		"methodIdentifiers": {}
	},
	"abi": []
}