{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220ae5a2e95f645193d0a220b8b85f308bc01714088b6bc442dc9a42e7c96f6fb1764736f6c63430007060033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE GAS 0x2E SWAP6 0xF6 GASLIMIT NOT RETURNDATASIZE EXP 0x22 SIGNEXTEND DUP12 DUP6 RETURN ADDMOD 0xBC ADD PUSH18 0x4088B6BC442DC9A42E7C96F6FB1764736F6C PUSH4 0x43000706 STOP CALLER ",
			"sourceMap": "10985:12012:0:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "6080604052600080fdfea2646970667358221220ae5a2e95f645193d0a220b8b85f308bc01714088b6bc442dc9a42e7c96f6fb1764736f6c63430007060033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE GAS 0x2E SWAP6 0xF6 GASLIMIT NOT RETURNDATASIZE EXP 0x22 SIGNEXTEND DUP12 DUP6 RETURN ADDMOD 0xBC ADD PUSH18 0x4088B6BC442DC9A42E7C96F6FB1764736F6C PUSH4 0x43000706 STOP CALLER ",
			"sourceMap": "10985:12012:0:-:0;;;;;"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "12600",
				"executionCost": "66",
				"totalCost": "12666"
			},
			"internal": {
				"addExp(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"add_(struct Exponential.Double memory,struct Exponential.Double memory)": "infinite",
				"add_(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"add_(uint256,uint256)": "infinite",
				"add_(uint256,uint256,string memory)": "infinite",
				"divExp(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"divScalar(struct Exponential.Exp memory,uint256)": "infinite",
				"divScalarByExp(uint256,struct Exponential.Exp memory)": "infinite",
				"divScalarByExpTruncate(uint256,struct Exponential.Exp memory)": "infinite",
				"div_(struct Exponential.Double memory,struct Exponential.Double memory)": "infinite",
				"div_(struct Exponential.Double memory,uint256)": "infinite",
				"div_(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"div_(struct Exponential.Exp memory,uint256)": "infinite",
				"div_(uint256,struct Exponential.Double memory)": "infinite",
				"div_(uint256,struct Exponential.Exp memory)": "infinite",
				"div_(uint256,uint256)": "infinite",
				"div_(uint256,uint256,string memory)": "infinite",
				"fraction(uint256,uint256)": "infinite",
				"getExp(uint256,uint256)": "infinite",
				"greaterThanExp(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"isZeroExp(struct Exponential.Exp memory)": "infinite",
				"lessThanExp(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"lessThanOrEqualExp(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"mulExp(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"mulExp(uint256,uint256)": "infinite",
				"mulExp3(struct Exponential.Exp memory,struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"mulScalar(struct Exponential.Exp memory,uint256)": "infinite",
				"mulScalarTruncate(struct Exponential.Exp memory,uint256)": "infinite",
				"mulScalarTruncateAddUInt(struct Exponential.Exp memory,uint256,uint256)": "infinite",
				"mul_(struct Exponential.Double memory,struct Exponential.Double memory)": "infinite",
				"mul_(struct Exponential.Double memory,uint256)": "infinite",
				"mul_(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"mul_(struct Exponential.Exp memory,uint256)": "infinite",
				"mul_(uint256,struct Exponential.Double memory)": "infinite",
				"mul_(uint256,struct Exponential.Exp memory)": "infinite",
				"mul_(uint256,uint256)": "infinite",
				"mul_(uint256,uint256,string memory)": "infinite",
				"safe224(uint256,string memory)": "infinite",
				"safe32(uint256,string memory)": "infinite",
				"subExp(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"sub_(struct Exponential.Double memory,struct Exponential.Double memory)": "infinite",
				"sub_(struct Exponential.Exp memory,struct Exponential.Exp memory)": "infinite",
				"sub_(uint256,uint256)": "infinite",
				"sub_(uint256,uint256,string memory)": "infinite",
				"truncate(struct Exponential.Exp memory)": "infinite"
			}
		},
		"methodIdentifiers": {}
	},
	"abi": []
}