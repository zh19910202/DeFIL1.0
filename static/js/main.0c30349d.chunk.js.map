{"version":3,"sources":["components/App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","authEFILToDeFIL","asyncToGenerator","regenerator_default","a","mark","_callee4","amount","wrap","_context4","prev","next","state","window","web3","utils","toWei","EFILInstance","methods","approve","DeFIL","address","send","from","account","on","transactionHash","console","log","stop","authEFILToFreeMarket","_callee5","_context5","FreeMarket","authNFTToDeFIL","_callee6","_context6","NFTMarketInstance","tokenID","authNFTToFreeMarket","_callee7","_context7","getAllNFTofOwer","_callee8","NFTbalance","_context8","getTokenIdToInfoMgrAll","sent","alert","join","commit","_callee9","_context9","commitNFTCreateRequest","productID","poolNmae","power","pledgeCoinCount","expiration","checkout","_callee10","lists","_context10","getNFTPendingReq","mint","_callee11","_context11","createNFTMachine","reqID","owner","pledge","_callee12","_context12","DeFilInstance","collateralize","mintEFIL","_callee13","userPutAmount","_context13","borrow","_callee14","_context14","userBorrowAmount","repay","_callee15","_context15","repayBorrow","userRepayBorrowAmount","checkoutBorrowInfo","_callee16","info","_context16","FreeMarketInstance","getInfoAll","publishBorrow","_callee17","idLists","_context17","ID","split","borrowBalance","publicBorrowMessage","time","rate","publishLend","_callee18","_context18","publicLendMessage","interset","borrowNew","_callee19","_context19","borrowInfoID","lendNew","_callee20","_context20","lend","repayNew","_callee21","_context21","liquidationBorrowNew","async","liquidationBorrow","getBorrowBalance","_callee22","balance","_context22","principalAndInterest","getNFTInfoAll","_callee23","_context23","buyNFT","_callee24","price","_context24","buyShopNFTMachine","upNFT","_callee25","_context25","saleNFTMachine","downNFT","_callee26","_context26","productOff","setPrice","_callee27","_context27","resetNFTPrice","test","changeInput","_ref25","_callee28","type","e","_context28","target","value","setState","defineProperty","_x","_x2","apply","arguments","bind","assertThisInitialized","borrowrate","supplywrate","loadWeb3","loadBlockchainData","eth","getAccounts","accounts","net","getId","networkId","getBalance","Web3","fromWei","Contract","abi","getCash","cashAmount","borrowBalanceStored","currentBorrowBalance","getAccountCollateralsInfo","tokenIds","borrowRatePerBlock","toBN","supplyRatePerBlock","EFIL","balanceOf","EFILbalance","NFTMarket","ethereum","enable","currentProvider","_this2","react_default","createElement","onClick","placeholder","onChange","Component","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c30349d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport './App.css'\n\nimport DeFIL from \"../abis/DeFIL.json\";\nimport FreeMarket from \"../abis/FreeMarket.json\";\nimport EFIL from \"../abis/EFIL.json\";\nimport NFTMarket from \"../abis/NFTMarket.json\";\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    const networkId = await web3.eth.net.getId()\n    this.setState({ networkId: networkId })\n\n    //余额\n    let balance = await web3.eth.getBalance(accounts[0])\n    balance = Web3.utils.fromWei(balance, 'ether');\n    this.setState({ balance: balance })\n\n    //加载实例\n    //加载DeFIL\n\n    const DeFilInstance = new web3.eth.Contract(DeFIL.abi,DeFIL.address)\n    let cashAmount = await DeFilInstance.methods.getCash().call()\n    cashAmount = web3.utils.fromWei(cashAmount,'ether') ;\n\n    let currentBorrowBalance = await DeFilInstance.methods.borrowBalanceStored(accounts[0]).call()\n    currentBorrowBalance = web3.utils.fromWei(currentBorrowBalance,'ether')\n\n    let tokenIds = await DeFilInstance.methods.getAccountCollateralsInfo(accounts[0]).call()\n    this.setState({DeFilInstance,cashAmount,currentBorrowBalance,tokenIds})\n    \n    //贷款利率\n    let borrowrate = await DeFilInstance.methods.borrowRatePerBlock().call()\n    borrowrate = web3.utils.fromWei(web3.utils.toBN(borrowrate * 2102400), 'ether') * 100 ;\n    this.setState({borrowrate})\n    \n    //获取存款利率\n    //supplyRatePerBlock\n    let supplywrate = await DeFilInstance.methods.supplyRatePerBlock().call()\n    supplywrate = web3.utils.fromWei(web3.utils.toBN(supplywrate * 2102400), 'ether') * 100 ;\n    this.setState({supplywrate})\n    \n\n    //加载FreeMarket\n    const FreeMarketInstance = new web3.eth.Contract(FreeMarket.abi,FreeMarket.address)\n    \n    this.setState({FreeMarketInstance})\n\n    //加载efil\n\n    const EFILInstance = new web3.eth.Contract(EFIL.abi,EFIL.address)\n    let EFILbalance = await EFILInstance.methods.balanceOf(accounts[0]).call()\n    EFILbalance = web3.utils.fromWei(EFILbalance,'ether')\n    this.setState({EFILInstance,EFILbalance})\n\n    //加载nftmarket\n\n    const NFTMarketInstance = new web3.eth.Contract(NFTMarket.abi,NFTMarket.address)\n    \n    \n    this.setState({NFTMarketInstance})\n\n  }\n  \n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  \n  constructor(props) {\n    super(props)\n    this.changeInput = this.changeInput.bind(this);\n    this.state = {\n      DeFilInstance : null,\n      account:null,\n      FreeMarketInstance:null,\n      balance:null,\n      EFILInstance:null,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n      NFTMarketInstance:null,\n      borrowrate:null,\n      supplywrate:null,\n     \n    }\n    \n  }\n\n\n  //efil授权至DeFIL\n  authEFILToDeFIL = async() =>{\n      let amount = this.state.amount\n      \n      amount = window.web3.utils.toWei(amount,\"ether\")\n   \n     this.state.EFILInstance.methods.approve(DeFIL.address,amount).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //efil授权至FreeMarket\n  authEFILToFreeMarket = async() =>{\n    let amount = this.state.amount\n    \n    amount = window.web3.utils.toWei(amount,\"ether\")\n   \n   this.state.EFILInstance.methods.approve(FreeMarket.address,amount).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n}\n\n  //nft授权至DeFIL\n  authNFTToDeFIL = async() =>{\n      this.state.NFTMarketInstance.methods.approve(DeFIL.address,this.state.tokenID).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n   \n  }\n\n\n  //nft授权至FreeMarket\n  authNFTToFreeMarket = async() =>{\n    this.state.NFTMarketInstance.methods.approve(FreeMarket.address,this.state.tokenID).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n \n}\n\n//查询拥有的nfttoken\n  getAllNFTofOwer= async() =>{\n    let NFTbalance = await this.state.NFTMarketInstance.methods.getTokenIdToInfoMgrAll(this.state.account).call()\n    alert(NFTbalance.join('\\n'))\n  }\n\n\n  \n  //提交nft铸造请求\n  commit = async() =>{\n\n    //this.state.productID,this.state.poolNmae,this.state.power,this.state.pledgeCoinCount,this.state.expiration\n    this.state.NFTMarketInstance.methods.commitNFTCreateRequest(this.state.productID,this.state.poolNmae,this.state.power,this.state.pledgeCoinCount,this.state.expiration).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n    \n\n  }\n\n  //查询请求铸造列表\n\n  checkout = async()=>{\n    let address = this.state.address\n    let lists =  await this.state.NFTMarketInstance.methods.getNFTPendingReq(address).call()\n    \n    alert(lists.join('\\n'))\n  }\n\n\n  //铸造nft\n  mint = async()=>{\n    //console.log(this.state.reqID,this.state.owner)\n    this.state.NFTMarketInstance.methods.createNFTMachine(this.state.reqID,this.state.owner).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //抵押\n  pledge = async() =>{\n    //console.log(this.state.tokenID)\n    this.state.DeFilInstance.methods.collateralize(this.state.tokenID).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //存款\n  mintEFIL = async()=>{\n   let userPutAmount = this.state.userPutAmount\n   userPutAmount = window.web3.utils.toWei(userPutAmount,\"ether\")\n  \n    //console.log(userPutAmount)\n    this.state.DeFilInstance.methods.mint(userPutAmount).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //借款\n  borrow = async()=>{\n    //console.log(this.state.userBorrowAmount)\n    let amount = this.state.userBorrowAmount\n    amount = window.web3.utils.toWei(amount,\"ether\")\n    this.state.DeFilInstance.methods.borrow(amount).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //还款\n  repay = async()=>{\n    //console.log(this.state.userRepayBorrowAmount)\n    this.state.DeFilInstance.methods.repayBorrow(this.state.userRepayBorrowAmount).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //清算\n\n\n  //***********************************\n\n  //查看借款信息列表\n  checkoutBorrowInfo= async()=>{\n    //console.log(this.state.FreeMarketInstance)\n    let info = await this.state.FreeMarketInstance.methods.getInfoAll().call()\n    alert(info.join('\\n'))\n  }\n\n  //发布借贷需求\n  publishBorrow = async() =>{\n    //console.log(this.state.ID,this.state.borrowBalance,this.state.time,this.state.rate)\n    let idLists = this.state.ID\n    idLists = idLists.split(\",\")\n    let amount = this.state.borrowBalance\n    amount = window.web3.utils.toWei(amount,'ether')\n    //console.log(idLists,amount)\n    this.state.FreeMarketInstance.methods.publicBorrowMessage(idLists,amount,this.state.time,this.state.rate).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n \n   \n  }\n  //发布放贷需求\n  publishLend = async() =>{\n    // console.log(this.state.amount,this.state.time,this.state.interset)\n    let amount = window.web3.utils.toWei(this.state.amount,'ether')\n    this.state.FreeMarketInstance.methods.publicLendMessage(amount,this.state.time,this.state.interset).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //借进\n  borrowNew = async() =>{\n    console.log(this.state.borrowInfoID)\n  }\n\n  //借出\n  lendNew = async()=>{\n    //console.log(this.state.borrowInfoID)\n    this.state.FreeMarketInstance.methods.lend(this.state.borrowInfoID).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n  //偿还\n  repayNew = async()=>{\n    //console.log(this.state.borrowInfoID,this.state.amount)\n    let amount = window.web3.utils.toWei(this.state.amount,'ether')\n    this.state.FreeMarketInstance.methods.repayBorrow(this.state.borrowInfoID,amount).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //清算\n  liquidationBorrowNew= async=>{\n    //console.log(this.state.borrowInfoID)\n    this.state.FreeMarketInstance.methods.liquidationBorrow(this.state.borrowInfoID).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  // 查询借款本息额度\n  getBorrowBalance = async() =>{\n   let balance =  await this.state.FreeMarketInstance.methods.principalAndInterest(this.state.borrowInfoID).call()\n   alert(balance)\n  }\n\n //查询商城所有nft\n getNFTInfoAll = async() =>{\n  let info =  await this.state.NFTMarketInstance.methods.getNFTInfoAll().call()\n  alert(info.join('\\n'))\n }\n\n  //购买NFT\n  buyNFT = async() =>{\n    //console.log(this.state.tokenID)\n    let price = window.web3.utils.toWei(this.state.price)\n    //console.log(price,this.state.tokenID)\n    this.state.NFTMarketInstance.methods.buyShopNFTMachine(this.state.tokenID,price).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //上架NFT\n  upNFT = async() =>{\n    //console.log(this.state.tokenID)\n    //console.log(price,this.state.tokenID)\n    let price = window.web3.utils.toWei(this.state.price)\n    this.state.NFTMarketInstance.methods.saleNFTMachine(this.state.tokenID,price).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //下架NFT\n  downNFT = async() =>{\n    console.log(this.state.tokenID)\n    this.state.NFTMarketInstance.methods.productOff(this.state.tokenID).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //修改价格\n  setPrice = async() =>{\n\n    console.log(this.state.tokenID,this.state.price)\n    let price = window.web3.utils.toWei(this.state.price)\n    this.state.NFTMarketInstance.methods.resetNFTPrice(this.state.tokenID,price).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //测试\n  test = async=>{\n    console.log(this.state.ID)\n  }\n\n  //changeInput\n  changeInput = async(type,e)=>{\n      console.log(e.target.value)\n      this.setState({\n        [type] : e.target.value\n      })\n  }\n\n  render() {\n    let networkId = this.state.networkId\n    if (networkId === 4){\n      networkId = \"Rinkeby\"\n    }else{\n      networkId = \"未知\"\n    }\n\n\n    return (\n      <div>\n       <div>网络：{networkId}</div>\n       <div>账户：{this.state.account}</div>\n       <div>余额：{this.state.balance} ETH</div>\n       <div>借款利率：{this.state.borrowrate}%</div> \n       <div>存款利率：{this.state.supplywrate}%</div> \n       <div>借款池余额:{this.state.cashAmount} EFIL</div>\n       <div>EFIL余额：{this.state.EFILbalance}</div>\n       <div>欠款：{this.state.currentBorrowBalance}</div>\n       <div>已经抵押NFT：{this.state.tokenIds}</div>\n       <div>查询NFT数量：<button onClick={()=>this.getAllNFTofOwer()}>确定</button></div>\n       <div>EFIL授权至DEFIL:<input type=\"text\" placeholder=\"授权额度\" value = {this.state.amount} onChange = {(e) => {this.changeInput('amount',e)}}/><button onClick={()=>{this.authEFILToDeFIL()}}>确定</button></div>\n       <div>EFIL授权至FreeMarket:<input type=\"text\" placeholder=\"授权额度\" value = {this.state.amount} onChange = {(e) => {this.changeInput('amount',e)}}/><button onClick={()=>{this.authEFILToFreeMarket()}}>确定</button></div>\n       <div>NFT授权至DEFIL:<input type=\"text\" placeholder=\"tokenID\" value = {this.state.tokenID} onChange = {(e) => {this.changeInput('tokenID',e)}}/><button onClick={()=>{this.authNFTToDeFIL()}}>确定</button></div>\n       <div>NFT授权至FreeMarket:<input type=\"text\" placeholder=\"tokenID\" value = {this.state.tokenID} onChange = {(e) => {this.changeInput('tokenID',e)}}/><button onClick={()=>{this.authNFTToFreeMarket()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>提交铸造请求:<input type=\"text\" placeholder=\"productID\" value = {this.state.productID} onChange = {(e) => {this.changeInput('productID',e)}}/><input type=\"text\"  placeholder=\"所属矿池\" value = {this.state.poolNmae} onChange = {(e) => {this.changeInput('poolNmae',e)}}/><input type=\"text\"  placeholder=\"有效算力\" value = {this.state.power} onChange = {(e) => {this.changeInput('power',e)}}/><input type=\"text\"  placeholder=\"质押币数量\" value = {this.state.pledgeCoinCount} onChange = {(e) => {this.changeInput('pledgeCoinCount',e)}}/><input type=\"text\"  placeholder=\"过期时间\" value = {this.state.expiration} onChange = {(e) => {this.changeInput('expiration',e)}}/><button onClick={()=>{this.commit()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>查询某个用户铸造列表:<input type=\"text\" placeholder=\"address\" value = {this.state.address} onChange = {(e) => {this.changeInput('address',e)}}/><button onClick={()=>{this.checkout()}}>查询</button></div>\n         \n       <div>---------------------------------------------------------</div>\n       <div>铸造nft:<input type=\"text\" placeholder=\"请求铸造ID\" value = {this.state.reqID} onChange = {(e) => {this.changeInput('reqID',e)}}/><input type=\"text\" placeholder=\"拥有者\" value = {this.state.owner} onChange = {(e) => {this.changeInput('owner',e)}}/><button onClick={()=>{this.mint()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>抵押NFT：<input type=\"text\" placeholder=\"tokenID\" value = {this.state.tokenID} onChange = {(e) => {this.changeInput('tokenID',e)}}/><button onClick={()=>{this.pledge()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>存款:<input type=\"text\"  placeholder=\"存款金额\" value = {this.state.userPutAmount} onChange = {(e) => {this.changeInput('userPutAmount',e)}}/><button onClick={()=>{this.mintEFIL()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>借款:<input type=\"text\"  placeholder=\"借款金额\" value = {this.state.userBorrowAmount} onChange = {(e) => {this.changeInput('userBorrowAmount',e)}}/><button onClick={()=>{this.borrow()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>还款：<input type=\"text\"  placeholder=\"还款金额\" value = {this.state.userRepayBorrowAmount} onChange = {(e) => {this.changeInput('userRepayBorrowAmount',e)}}/><button onClick={()=>{this.repay()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>---------------------------------------------------------</div>\n       <h1>点对点借贷市场</h1>\n       <div>---------------------------------------------------------</div>\n       <div>查询欠款：<input type=\"text\"  placeholder=\"借款信息ID\" value = {this.state.borrowInfoID} onChange = {(e) => {this.changeInput('borrowInfoID',e)}}/><button onClick={()=>{this.getBorrowBalance()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>发布借贷需求：<input type=\"text\" placeholder=\"tokenId,多个Id使用,分割\" value = {this.state.ID} onChange = {(e) => {this.changeInput('ID',e)}}/><input type=\"text\"  placeholder=\"金额\"  value = {this.state.borrowBalance} onChange = {(e) => {this.changeInput('borrowBalance',e)}}/ ><input type=\"text\"  placeholder=\"周期\" value = {this.state.time} onChange = {(e) => {this.changeInput('time',e)}}/><input type=\"text\"  placeholder=\"利率\" value = {this.state.rate} onChange = {(e) => {this.changeInput('rate',e)}}/><button onClick={()=>{this.publishBorrow()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       {/* <div>发布借出需求：<input type=\"text\"  placeholder=\"金额\" value = {this.state.amount} onChange = {(e) => {this.changeInput('amount',e)}}/><input type=\"text\"  placeholder=\"周期\" value = {this.state.time} onChange = {(e) => {this.changeInput('time',e)}}/><input type=\"text\"  placeholder=\"利率\" value = {this.state.interset} onChange = {(e) => {this.changeInput('interset',e)}}/><button onClick={()=>{this.publishLend()}}>确定</button></div>\n       <div>---------------------------------------------------------</div> */}\n       <div>借款信息列表：<button onClick={()=>{this.checkoutBorrowInfo()}}>查询</button></div>\n       <div>---------------------------------------------------------</div>\n       {/* <div>借进：<input type=\"text\"  placeholder=\"借款信息ID\" value = {this.state.borrowInfoID} onChange = {(e) => {this.changeInput('borrowInfoID',e)}}/><button onClick={()=>{this.borrowNew()}}>确定</button></div>\n       <div>---------------------------------------------------------</div> */}\n       <div>借出：<input type=\"text\"  placeholder=\"借款信息ID\" value = {this.state.borrowInfoID} onChange = {(e) => {this.changeInput('borrowInfoID',e)}}/><button onClick={()=>{this.lendNew()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>偿还：<input type=\"text\"  placeholder=\"借款信息ID\" value = {this.state.borrowInfoID} onChange = {(e) => {this.changeInput('borrowInfoID',e)}}/><input type=\"text\"  placeholder=\"还款金额\" value = {this.state.amount} onChange = {(e) => {this.changeInput('amount',e)}}/><button onClick={()=>{this.repayNew()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>清算：<input type=\"text\"  placeholder=\"借款信息ID\" value = {this.state.borrowInfoID} onChange = {(e) => {this.changeInput('borrowInfoID',e)}}/><button onClick={()=>{this.liquidationBorrowNew()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>---------------------------------------------------------</div>\n       <div>查询NFT商城列表:<button onClick={()=>{this.getNFTInfoAll()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>购买NFT：<input type=\"text\"  placeholder=\"tokenID\" value = {this.state.tokenID} onChange = {(e) => {this.changeInput('tokenID',e)}}/><input type=\"text\"  placeholder=\"价格\" value = {this.state.price} onChange = {(e) => {this.changeInput('price',e)}}/><button onClick={()=>{this.buyNFT()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>上架NFT:<input type=\"text\"  placeholder=\"tokenID\" value = {this.state.tokenID} onChange = {(e) => {this.changeInput('tokenID',e)}}/><input type=\"text\"  placeholder=\"价格\" value = {this.state.price} onChange = {(e) => {this.changeInput('price',e)}}/><button onClick={()=>{this.upNFT()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>修改价格:<input type=\"text\"  placeholder=\"tokenID\" value = {this.state.tokenID} onChange = {(e) => {this.changeInput('tokenID',e)}}/><input type=\"text\"  placeholder=\"价格\" value = {this.state.price} onChange = {(e) => {this.changeInput('price',e)}}/><button onClick={()=>{this.setPrice()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>下架NFT:<input type=\"text\"  placeholder=\"tokenID\" value = {this.state.tokenID} onChange = {(e) => {this.changeInput('tokenID',e)}}/><button onClick={()=>{this.downNFT()}}>确定</button></div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}