{"version":3,"sources":["components/App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","authEFILToDeFIL","asyncToGenerator","regenerator_default","a","mark","_callee4","amount","wrap","_context4","prev","next","state","window","web3","utils","toWei","EFILInstance","methods","approve","DeFIL","address","send","from","account","on","transactionHash","console","log","stop","authEFILToFreeMarket","_callee5","_context5","FreeMarket","authNFTToDeFIL","_callee6","_context6","NFTMarketInstance","tokenID","authNFTToFreeMarket","_callee7","_context7","commit","_callee8","_context8","commitNFTCreateRequest","productID","poolNmae","power","pledgeCoinCount","expiration","checkout","_callee9","lists","_context9","getNFTPendingReq","sent","alert","join","mint","_callee10","_context10","createNFTMachine","reqID","owner","pledge","_callee11","_context11","DeFilInstance","collateralize","mintEFIL","_callee12","userPutAmount","_context12","borrow","_callee13","_context13","userBorrowAmount","repay","_callee14","_context14","repayBorrow","userRepayBorrowAmount","checkoutBorrowInfo","_callee15","info","_context15","FreeMarketInstance","getInfoAll","publishBorrow","_callee16","idLists","_context16","ID","split","borrowBalance","publicBorrowMessage","time","rate","publishLend","_callee17","_context17","publicLendMessage","interset","borrowNew","_callee18","_context18","borrowInfoID","lendNew","_callee19","_context19","lend","repayNew","_callee20","_context20","liquidationBorrowNew","async","liquidationBorrow","getBorrowBalance","_callee21","balance","_context21","principalAndInterest","getNFTInfoAll","_callee22","_context22","buyNFT","_callee23","price","_context23","buyShopNFTMachine","upNFT","_callee24","_context24","saleNFTMachine","downNFT","_callee25","_context25","productOff","setPrice","_callee26","_context26","resetNFTPrice","test","changeInput","_ref24","_callee27","type","e","_context27","target","value","setState","defineProperty","_x","_x2","apply","arguments","bind","assertThisInitialized","borrowrate","supplywrate","loadWeb3","loadBlockchainData","eth","getAccounts","accounts","net","getId","networkId","getBalance","Web3","fromWei","Contract","abi","getCash","cashAmount","borrowBalanceStored","currentBorrowBalance","getAccountCollateralsInfo","tokenIds","borrowRatePerBlock","toBN","supplyRatePerBlock","EFIL","balanceOf","EFILbalance","NFTMarket","NFTbalance","ethereum","enable","currentProvider","_this2","react_default","createElement","placeholder","onChange","onClick","Component","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21c9a57d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport './App.css'\n\nimport DeFIL from \"../abis/DeFIL.json\";\nimport FreeMarket from \"../abis/FreeMarket.json\";\nimport EFIL from \"../abis/EFIL.json\";\nimport NFTMarket from \"../abis/NFTMarket.json\";\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    const networkId = await web3.eth.net.getId()\n    this.setState({ networkId: networkId })\n\n    //余额\n    let balance = await web3.eth.getBalance(accounts[0])\n    balance = Web3.utils.fromWei(balance, 'ether');\n    this.setState({ balance: balance })\n\n    //加载实例\n    //加载DeFIL\n\n    const DeFilInstance = new web3.eth.Contract(DeFIL.abi,DeFIL.address)\n    let cashAmount = await DeFilInstance.methods.getCash().call()\n    cashAmount = web3.utils.fromWei(cashAmount,'ether') ;\n\n    let currentBorrowBalance = await DeFilInstance.methods.borrowBalanceStored(accounts[0]).call()\n    currentBorrowBalance = web3.utils.fromWei(currentBorrowBalance,'ether')\n\n    let tokenIds = await DeFilInstance.methods.getAccountCollateralsInfo(accounts[0]).call()\n    this.setState({DeFilInstance,cashAmount,currentBorrowBalance,tokenIds})\n    \n    //贷款利率\n    let borrowrate = await DeFilInstance.methods.borrowRatePerBlock().call()\n    borrowrate = web3.utils.fromWei(web3.utils.toBN(borrowrate * 2102400), 'ether') * 100 ;\n    this.setState({borrowrate})\n    \n    //获取存款利率\n    //supplyRatePerBlock\n    let supplywrate = await DeFilInstance.methods.supplyRatePerBlock().call()\n    supplywrate = web3.utils.fromWei(web3.utils.toBN(supplywrate * 2102400), 'ether') * 100 ;\n    this.setState({supplywrate})\n    \n\n    //加载FreeMarket\n    const FreeMarketInstance = new web3.eth.Contract(FreeMarket.abi,FreeMarket.address)\n    \n    this.setState({FreeMarketInstance})\n\n    //加载efil\n\n    const EFILInstance = new web3.eth.Contract(EFIL.abi,EFIL.address)\n    let EFILbalance = await EFILInstance.methods.balanceOf(accounts[0]).call()\n    EFILbalance = web3.utils.fromWei(EFILbalance,'ether')\n    this.setState({EFILInstance,EFILbalance})\n\n    //加载nftmarket\n\n    const NFTMarketInstance = new web3.eth.Contract(NFTMarket.abi,NFTMarket.address)\n    \n    let NFTbalance = await NFTMarketInstance.methods.balanceOf(accounts[0]).call()\n    this.setState({NFTMarketInstance,NFTbalance})\n\n  }\n  \n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  \n  constructor(props) {\n    super(props)\n    this.changeInput = this.changeInput.bind(this);\n    this.state = {\n      DeFilInstance : null,\n      account:null,\n      FreeMarketInstance:null,\n      balance:null,\n      EFILInstance:nulln      NFTMarketInstance:null,\n      borrowrate:null,\n      supplywrate:null,\n     \n    }\n    \n  }\n\n\n  //efil授权至DeFIL\n  authEFILToDeFIL = async() =>{\n      let amount = this.state.amount\n      \n      amount = window.web3.utils.toWei(amount,\"ether\")\n   \n     this.state.EFILInstance.methods.approve(DeFIL.address,amount).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //efil授权至FreeMarket\n  authEFILToFreeMarket = async() =>{\n    let amount = this.state.amount\n    \n    amount = window.web3.utils.toWei(amount,\"ether\")\n   \n   this.state.EFILInstance.methods.approve(FreeMarket.address,amount).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n}\n\n  //nft授权至DeFIL\n  authNFTToDeFIL = async() =>{\n      this.state.NFTMarketInstance.methods.approve(DeFIL.address,this.state.tokenID).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n   \n  }\n\n\n  //nft授权至FreeMarket\n  authNFTToFreeMarket = async() =>{\n    this.state.NFTMarketInstance.methods.approve(FreeMarket.address,this.state.tokenID).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n \n}\n\n\n\n\n  \n  //提交nft铸造请求\n  commit = async() =>{\n\n    //this.state.productID,this.state.poolNmae,this.state.power,this.state.pledgeCoinCount,this.state.expiration\n    this.state.NFTMarketInstance.methods.commitNFTCreateRequest(this.state.productID,this.state.poolNmae,this.state.power,this.state.pledgeCoinCount,this.state.expiration).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n    \n\n  }\n\n  //查询请求铸造列表\n\n  checkout = async()=>{\n    let address = this.state.address\n    let lists =  await this.state.NFTMarketInstance.methods.getNFTPendingReq(address).call()\n    alert(lists.join('\\n'))\n  }\n\n\n  //铸造nft\n  mint = async()=>{\n    //console.log(this.state.reqID,this.state.owner)\n    this.state.NFTMarketInstance.methods.createNFTMachine(this.state.reqID,this.state.owner).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //抵押\n  pledge = async() =>{\n    //console.log(this.state.tokenID)\n    this.state.DeFilInstance.methods.collateralize(this.state.tokenID).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //存款\n  mintEFIL = async()=>{\n   let userPutAmount = this.state.userPutAmount\n   userPutAmount = window.web3.utils.toWei(userPutAmount,\"ether\")\n  \n    //console.log(userPutAmount)\n    this.state.DeFilInstance.methods.mint(userPutAmount).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //借款\n  borrow = async()=>{\n    //console.log(this.state.userBorrowAmount)\n    let amount = this.state.userBorrowAmount\n    amount = window.web3.utils.toWei(amount,\"ether\")\n    this.state.DeFilInstance.methods.borrow(amount).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //还款\n  repay = async()=>{\n    //console.log(this.state.userRepayBorrowAmount)\n    this.state.DeFilInstance.methods.repayBorrow(this.state.userRepayBorrowAmount).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //清算\n\n\n  //***********************************\n\n  //查看借款信息列表\n  checkoutBorrowInfo= async()=>{\n    //console.log(this.state.FreeMarketInstance)\n    let info = await this.state.FreeMarketInstance.methods.getInfoAll().call()\n    alert(info.join('\\n'))\n  }\n\n  //发布借贷需求\n  publishBorrow = async() =>{\n    //console.log(this.state.ID,this.state.borrowBalance,this.state.time,this.state.rate)\n    let idLists = this.state.ID\n    idLists = idLists.split(\",\")\n    let amount = this.state.borrowBalance\n    amount = window.web3.utils.toWei(amount,'ether')\n    //console.log(idLists,amount)\n    this.state.FreeMarketInstance.methods.publicBorrowMessage(idLists,amount,this.state.time,this.state.rate).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n \n   \n  }\n  //发布放贷需求\n  publishLend = async() =>{\n    // console.log(this.state.amount,this.state.time,this.state.interset)\n    let amount = window.web3.utils.toWei(this.state.amount,'ether')\n    this.state.FreeMarketInstance.methods.publicLendMessage(amount,this.state.time,this.state.interset).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //借进\n  borrowNew = async() =>{\n    console.log(this.state.borrowInfoID)\n  }\n\n  //借出\n  lendNew = async()=>{\n    //console.log(this.state.borrowInfoID)\n    this.state.FreeMarketInstance.methods.lend(this.state.borrowInfoID).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n  //偿还\n  repayNew = async()=>{\n    //console.log(this.state.borrowInfoID,this.state.amount)\n    let amount = window.web3.utils.toWei(this.state.amount,'ether')\n    this.state.FreeMarketInstance.methods.repayBorrow(this.state.borrowInfoID,amount).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //清算\n  liquidationBorrowNew= async=>{\n    //console.log(this.state.borrowInfoID)\n    this.state.FreeMarketInstance.methods.liquidationBorrow(this.state.borrowInfoID).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  // 查询借款本息额度\n  getBorrowBalance = async() =>{\n   let balance =  await this.state.FreeMarketInstance.methods.principalAndInterest(this.state.borrowInfoID).call()\n   alert(balance)\n  }\n\n //查询商城所有nft\n getNFTInfoAll = async() =>{\n  let info =  await this.state.NFTMarketInstance.methods.getNFTInfoAll().call()\n  alert(info.join('\\n'))\n }\n\n  //购买NFT\n  buyNFT = async() =>{\n    //console.log(this.state.tokenID)\n    let price = window.web3.utils.toWei(this.state.price)\n    //console.log(price,this.state.tokenID)\n    this.state.NFTMarketInstance.methods.buyShopNFTMachine(this.state.tokenID,price).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //上架NFT\n  upNFT = async() =>{\n    //console.log(this.state.tokenID)\n    //console.log(price,this.state.tokenID)\n    let price = window.web3.utils.toWei(this.state.price)\n    this.state.NFTMarketInstance.methods.saleNFTMachine(this.state.tokenID,price).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //下架NFT\n  downNFT = async() =>{\n    console.log(this.state.tokenID)\n    this.state.NFTMarketInstance.methods.productOff(this.state.tokenID).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //修改价格\n  setPrice = async() =>{\n\n    console.log(this.state.tokenID,this.state.price)\n    let price = window.web3.utils.toWei(this.state.price)\n    this.state.NFTMarketInstance.methods.resetNFTPrice(this.state.tokenID,price).send({from:this.state.account}).on('transactionHash',(transactionHash)=>{console.log('transactionHash:',transactionHash)})\n  }\n\n  //测试\n  test = async=>{\n    console.log(this.state.ID)\n  }\n\n  //changeInput\n  changeInput = async(type,e)=>{\n      console.log(e.target.value)\n      this.setState({\n        [type] : e.target.value\n      })\n  }\n\n  render() {\n    let networkId = this.state.networkId\n    if (networkId === 4){\n      networkId = \"Rinkeby\"\n    }else{\n      networkId = \"未知\"\n    }\n\n\n    return (\n      <div>\n       <div>网络：{networkId}</div>\n       <div>账户：{this.state.account}</div>\n       <div>余额：{this.state.balance} ETH</div>\n       <div>借款利率：{this.state.borrowrate}%</div> \n       <div>存款利率：{this.state.supplywrate}%</div> \n       <div>借款池余额:{this.state.cashAmount} EFIL</div>\n       <div>EFIL余额：{this.state.EFILbalance}</div>\n       <div>欠款：{this.state.currentBorrowBalance}</div>\n       <div>已经抵押NFT：{this.state.tokenIds}</div>\n       <div>查询NFT数量：{this.state.NFTbalance}</div>\n       <div>EFIL授权至DEFIL:<input type=\"text\" placeholder=\"授权额度\" value = {this.state.amount} onChange = {(e) => {this.changeInput('amount',e)}}/><button onClick={()=>{this.authEFILToDeFIL()}}>确定</button></div>\n       <div>EFIL授权至FreeMarket:<input type=\"text\" placeholder=\"授权额度\" value = {this.state.amount} onChange = {(e) => {this.changeInput('amount',e)}}/><button onClick={()=>{this.authEFILToFreeMarket()}}>确定</button></div>\n       <div>NFT授权至DEFIL:<input type=\"text\" placeholder=\"tokenID\" value = {this.state.tokenID} onChange = {(e) => {this.changeInput('tokenID',e)}}/><button onClick={()=>{this.authNFTToDeFIL()}}>确定</button></div>\n       <div>NFT授权至FreeMarket:<input type=\"text\" placeholder=\"tokenID\" value = {this.state.tokenID} onChange = {(e) => {this.changeInput('tokenID',e)}}/><button onClick={()=>{this.authNFTToFreeMarket()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>提交铸造请求:<input type=\"text\" placeholder=\"productID\" value = {this.state.productID} onChange = {(e) => {this.changeInput('productID',e)}}/><input type=\"text\"  placeholder=\"所属矿池\" value = {this.state.poolNmae} onChange = {(e) => {this.changeInput('poolNmae',e)}}/><input type=\"text\"  placeholder=\"有效算力\" value = {this.state.power} onChange = {(e) => {this.changeInput('power',e)}}/><input type=\"text\"  placeholder=\"质押币数量\" value = {this.state.pledgeCoinCount} onChange = {(e) => {this.changeInput('pledgeCoinCount',e)}}/><input type=\"text\"  placeholder=\"过期时间\" value = {this.state.expiration} onChange = {(e) => {this.changeInput('expiration',e)}}/><button onClick={()=>{this.commit()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>查询某个用户铸造列表:<input type=\"text\" placeholder=\"address\" value = {this.state.address} onChange = {(e) => {this.changeInput('address',e)}}/><button onClick={()=>{this.checkout()}}>查询</button></div>\n         \n       <div>---------------------------------------------------------</div>\n       <div>铸造nft:<input type=\"text\" placeholder=\"请求铸造ID\" value = {this.state.reqID} onChange = {(e) => {this.changeInput('reqID',e)}}/><input type=\"text\" placeholder=\"拥有者\" value = {this.state.owner} onChange = {(e) => {this.changeInput('owner',e)}}/><button onClick={()=>{this.mint()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>抵押NFT：<input type=\"text\" placeholder=\"tokenID\" value = {this.state.tokenID} onChange = {(e) => {this.changeInput('tokenID',e)}}/><button onClick={()=>{this.pledge()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>存款:<input type=\"text\"  placeholder=\"存款金额\" value = {this.state.userPutAmount} onChange = {(e) => {this.changeInput('userPutAmount',e)}}/><button onClick={()=>{this.mintEFIL()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>借款:<input type=\"text\"  placeholder=\"借款金额\" value = {this.state.userBorrowAmount} onChange = {(e) => {this.changeInput('userBorrowAmount',e)}}/><button onClick={()=>{this.borrow()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>还款：<input type=\"text\"  placeholder=\"还款金额\" value = {this.state.userRepayBorrowAmount} onChange = {(e) => {this.changeInput('userRepayBorrowAmount',e)}}/><button onClick={()=>{this.repay()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>---------------------------------------------------------</div>\n       <h1>点对点借贷市场</h1>\n       <div>---------------------------------------------------------</div>\n       <div>查询欠款：<input type=\"text\"  placeholder=\"借款信息ID\" value = {this.state.borrowInfoID} onChange = {(e) => {this.changeInput('borrowInfoID',e)}}/><button onClick={()=>{this.getBorrowBalance()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>发布借贷需求：<input type=\"text\" placeholder=\"tokenId,多个Id使用,分割\" value = {this.state.ID} onChange = {(e) => {this.changeInput('ID',e)}}/><input type=\"text\"  placeholder=\"金额\"  value = {this.state.borrowBalance} onChange = {(e) => {this.changeInput('borrowBalance',e)}}/ ><input type=\"text\"  placeholder=\"周期\" value = {this.state.time} onChange = {(e) => {this.changeInput('time',e)}}/><input type=\"text\"  placeholder=\"利率\" value = {this.state.rate} onChange = {(e) => {this.changeInput('rate',e)}}/><button onClick={()=>{this.publishBorrow()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       {/* <div>发布借出需求：<input type=\"text\"  placeholder=\"金额\" value = {this.state.amount} onChange = {(e) => {this.changeInput('amount',e)}}/><input type=\"text\"  placeholder=\"周期\" value = {this.state.time} onChange = {(e) => {this.changeInput('time',e)}}/><input type=\"text\"  placeholder=\"利率\" value = {this.state.interset} onChange = {(e) => {this.changeInput('interset',e)}}/><button onClick={()=>{this.publishLend()}}>确定</button></div>\n       <div>---------------------------------------------------------</div> */}\n       <div>借款信息列表：<button onClick={()=>{this.checkoutBorrowInfo()}}>查询</button></div>\n       <div>---------------------------------------------------------</div>\n       {/* <div>借进：<input type=\"text\"  placeholder=\"借款信息ID\" value = {this.state.borrowInfoID} onChange = {(e) => {this.changeInput('borrowInfoID',e)}}/><button onClick={()=>{this.borrowNew()}}>确定</button></div>\n       <div>---------------------------------------------------------</div> */}\n       <div>借出：<input type=\"text\"  placeholder=\"借款信息ID\" value = {this.state.borrowInfoID} onChange = {(e) => {this.changeInput('borrowInfoID',e)}}/><button onClick={()=>{this.lendNew()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>偿还：<input type=\"text\"  placeholder=\"借款信息ID\" value = {this.state.borrowInfoID} onChange = {(e) => {this.changeInput('borrowInfoID',e)}}/><input type=\"text\"  placeholder=\"还款金额\" value = {this.state.amount} onChange = {(e) => {this.changeInput('amount',e)}}/><button onClick={()=>{this.repayNew()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>清算：<input type=\"text\"  placeholder=\"借款信息ID\" value = {this.state.borrowInfoID} onChange = {(e) => {this.changeInput('borrowInfoID',e)}}/><button onClick={()=>{this.liquidationBorrowNew()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>---------------------------------------------------------</div>\n       <div>查询NFT商城列表:<button onClick={()=>{this.getNFTInfoAll()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>购买NFT：<input type=\"text\"  placeholder=\"tokenID\" value = {this.state.tokenID} onChange = {(e) => {this.changeInput('tokenID',e)}}/><input type=\"text\"  placeholder=\"价格\" value = {this.state.price} onChange = {(e) => {this.changeInput('price',e)}}/><button onClick={()=>{this.buyNFT()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>上架NFT:<input type=\"text\"  placeholder=\"tokenID\" value = {this.state.tokenID} onChange = {(e) => {this.changeInput('tokenID',e)}}/><input type=\"text\"  placeholder=\"价格\" value = {this.state.price} onChange = {(e) => {this.changeInput('price',e)}}/><button onClick={()=>{this.upNFT()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>修改价格:<input type=\"text\"  placeholder=\"tokenID\" value = {this.state.tokenID} onChange = {(e) => {this.changeInput('tokenID',e)}}/><input type=\"text\"  placeholder=\"价格\" value = {this.state.price} onChange = {(e) => {this.changeInput('price',e)}}/><button onClick={()=>{this.setPrice()}}>确定</button></div>\n       <div>---------------------------------------------------------</div>\n       <div>下架NFT:<input type=\"text\"  placeholder=\"tokenID\" value = {this.state.tokenID} onChange = {(e) => {this.changeInput('tokenID',e)}}/><button onClick={()=>{this.downNFT()}}>确定</button></div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}